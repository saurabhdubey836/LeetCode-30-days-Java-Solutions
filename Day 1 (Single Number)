Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:
Input: [2,2,1]
Output: 1

Example 2:
Input: [4,1,2,1,2]
Output: 4

Code:-
class Solution {
    public int singleNumber(int[] nums) {
        int len=nums.length;
        Map<Integer,Integer> myMap=new HashMap<Integer,Integer>();
        for(int i=0;i<len;i++){
           myMap.put(nums[i],myMap.getOrDefault(nums[i],0)+1);
            
        }
        for(Integer num:myMap.keySet()){
            if(myMap.get(num)==1){
                return num;
            } 
        }
        return 0;
    }
    
}
